syntax = "proto3";{{$serviceName := .ServiceName}}{{$protoServiceName := toSnake .ServiceName}}

package services.{{$protoServiceName}};

option go_package = "{{.VCSProjectPrefix}}/{{.RepositoryName}}/gen/go/{{.MainPackageName}}/{{$protoServiceName}};{{$protoServiceName}}";
{{if .IsHTTPService}}

import "google/api/annotations.proto";
import "mikros_extensions.proto";
import "mikros_openapi.proto";

option (openapi.metadata) = {
  info: {
    title: "{{.ServiceName}}"
    version: "v0.1.0"
  }
};
{{- end}}

service {{toCamel .ServiceName}}Service {
{{- if .IsHTTPService}}
 option (mikros.extensions.service_options) = {
    authorization: {
      mode: AUTHORIZATION_MODE_CUSTOM
      custom_auth_name: "scopes"
    }
  };

  {{- range $method := .RPCMethods}}
  rpc {{$method.Name}}({{$method.Name}}Request) returns ({{$method.Name}}Response) {
    option (google.api.http) = {
      {{.HTTPMethod}}: "{{.HTTPEndpoint}}"
      {{- if .HasBody}}
      body: "*"
      {{- end}}
    };

    option (mikros.extensions.method_options) = {
      http: {
        auth_arg: "{{.AuthArgMode}}"
      }
    };

    option (openapi.operation) = {
      summary: "<ADD ENDPOINT SUMMARY HERE>"
      description: "<ADD ENDPOINT DESCRIPTION HERE>"
      tags: "{{$serviceName}}"

      response: {
        code: RESPONSE_CODE_OK
        description: "Request successful"
      }

      response: {
        code: RESPONSE_CODE_UNAUTHORIZED
        description: "Unauthorized access"
      }

      response: {
        code: RESPONSE_CODE_BAD_REQUEST
        description: "Invalid request arguments"
      }
    };
  }
  {{- end}}
{{- else}}
  {{- range $method := .RPCMethods}}
  rpc {{$method.Name}}({{$method.Name}}Request) returns ({{$method.Name}}Response);
  {{- end}}
{{- end}}
}

{{range $method := .RPCMethods -}}
message {{$method.Name}}Request {
}

message {{$method.Name}}Response {
}

{{end -}}