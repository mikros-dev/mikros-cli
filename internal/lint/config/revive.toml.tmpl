ignoreGeneratedHeader = true
severity   = "warning"
confidence = 0.8
errorCode  = 42
warningCode = 42

[rule.blank-imports]
severity = "error"

[rule.dot-imports]
severity = "error"

[rule.duplicated-imports]
severity = "warning"

[rule.line-length-limit]
severity  = "warning"
arguments = [{{.LineLength}}]

[rule.exported]
severity = "error"

[rule.package-comments]
severity = "warning"
Disabled = true

[rule.comment-spacings]
severity = "warning"

# function-length: [máx. statements, máx. linhas]
[rule.function-length]
severity  = "warning"
arguments = [{{.FunctionStatements}}, {{.FunctionLines}}] # ~{{.FunctionStatements}} statements, ~{{.FunctionLines}} linhas

[rule.cyclomatic]
severity  = "warning"
arguments = [{{.Cyclomatic}}]

[rule.cognitive-complexity]
severity  = "warning"
arguments = [{{.Complexity}}]

[rule.function-result-limit]
severity  = "warning"
arguments = [3]

# Prefere early return; evita else desnecessário
[rule.if-return]
severity = "warning"

[rule.indent-error-flow]
severity = "warning"

[rule.max-control-nesting]
severity  = "warning"
arguments = [{{.MaxNestingLevel}}]

[rule.var-naming]
severity = "warning"

[rule.receiver-naming]
severity = "warning"

[rule.confusing-naming]
severity = "warning"

[rule.error-strings]
severity = "warning"

[rule.unhandled-error]
severity = "warning"
Exclude = ["TEST"]
arguments = [
    "fmt.Print",
    "fmt.Println",
    "fmt.Printf"
]

[rule.unnecessary-stmt]
severity = "warning"

[rule.constant-logical-expr]
severity = "warning"

[rule.increment-decrement]
severity = "warning"
