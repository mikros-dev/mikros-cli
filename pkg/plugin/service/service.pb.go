// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: plugin/service/service.proto

package service

import (
	survey "github.com/mikros-dev/mikros-cli/pkg/plugin/survey"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_plugin_service_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{0}
}

type GetNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNameResponse) Reset() {
	*x = GetNameResponse{}
	mi := &file_plugin_service_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNameResponse) ProtoMessage() {}

func (x *GetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNameResponse.ProtoReflect.Descriptor instead.
func (*GetNameResponse) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetKindResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKindResponse) Reset() {
	*x = GetKindResponse{}
	mi := &file_plugin_service_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKindResponse) ProtoMessage() {}

func (x *GetKindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKindResponse.ProtoReflect.Descriptor instead.
func (*GetKindResponse) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetKindResponse) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type GetSurveyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Survey        *survey.Survey         `protobuf:"bytes,1,opt,name=survey,proto3" json:"survey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSurveyResponse) Reset() {
	*x = GetSurveyResponse{}
	mi := &file_plugin_service_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSurveyResponse) ProtoMessage() {}

func (x *GetSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSurveyResponse.ProtoReflect.Descriptor instead.
func (*GetSurveyResponse) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSurveyResponse) GetSurvey() *survey.Survey {
	if x != nil {
		return x.Survey
	}
	return nil
}

type ValidateAnswersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answers       *structpb.Struct       `protobuf:"bytes,1,opt,name=answers,proto3" json:"answers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAnswersRequest) Reset() {
	*x = ValidateAnswersRequest{}
	mi := &file_plugin_service_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAnswersRequest) ProtoMessage() {}

func (x *ValidateAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAnswersRequest.ProtoReflect.Descriptor instead.
func (*ValidateAnswersRequest) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateAnswersRequest) GetAnswers() *structpb.Struct {
	if x != nil {
		return x.Answers
	}
	return nil
}

type ValidateAnswersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShouldSave    bool                   `protobuf:"varint,1,opt,name=should_save,json=shouldSave,proto3" json:"should_save,omitempty"`
	Values        *structpb.Struct       `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAnswersResponse) Reset() {
	*x = ValidateAnswersResponse{}
	mi := &file_plugin_service_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAnswersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAnswersResponse) ProtoMessage() {}

func (x *ValidateAnswersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAnswersResponse.ProtoReflect.Descriptor instead.
func (*ValidateAnswersResponse) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateAnswersResponse) GetShouldSave() bool {
	if x != nil {
		return x.ShouldSave
	}
	return false
}

func (x *ValidateAnswersResponse) GetValues() *structpb.Struct {
	if x != nil {
		return x.Values
	}
	return nil
}

type GetTemplateResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Template                []*TemplateFile        `protobuf:"bytes,1,rep,name=template,proto3" json:"template,omitempty"`
	NewServiceArgs          string                 `protobuf:"bytes,2,opt,name=new_service_args,json=newServiceArgs,proto3" json:"new_service_args,omitempty"`
	WithExternalFeaturesArg string                 `protobuf:"bytes,3,opt,name=with_external_features_arg,json=withExternalFeaturesArg,proto3" json:"with_external_features_arg,omitempty"`
	WithExternalServicesArg string                 `protobuf:"bytes,4,opt,name=with_external_services_arg,json=withExternalServicesArg,proto3" json:"with_external_services_arg,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	mi := &file_plugin_service_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetTemplateResponse) GetTemplate() []*TemplateFile {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *GetTemplateResponse) GetNewServiceArgs() string {
	if x != nil {
		return x.NewServiceArgs
	}
	return ""
}

func (x *GetTemplateResponse) GetWithExternalFeaturesArg() string {
	if x != nil {
		return x.WithExternalFeaturesArg
	}
	return ""
}

func (x *GetTemplateResponse) GetWithExternalServicesArg() string {
	if x != nil {
		return x.WithExternalServicesArg
	}
	return ""
}

type TemplateFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Output        string                 `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Extension     string                 `protobuf:"bytes,4,opt,name=extension,proto3" json:"extension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateFile) Reset() {
	*x = TemplateFile{}
	mi := &file_plugin_service_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateFile) ProtoMessage() {}

func (x *TemplateFile) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_service_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateFile.ProtoReflect.Descriptor instead.
func (*TemplateFile) Descriptor() ([]byte, []int) {
	return file_plugin_service_service_proto_rawDescGZIP(), []int{7}
}

func (x *TemplateFile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TemplateFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TemplateFile) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *TemplateFile) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

var File_plugin_service_service_proto protoreflect.FileDescriptor

var file_plugin_service_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x73, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x06, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x22, 0x4b, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x22, 0x6b, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x53, 0x61, 0x76, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0xf4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x3b, 0x0a, 0x1a,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x41, 0x72, 0x67, 0x12, 0x3b, 0x0a, 0x1a, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x77,
	0x69, 0x74, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x41, 0x72, 0x67, 0x22, 0x72, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xc6, 0x03, 0x0a, 0x06, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0xbd, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2d, 0x64,
	0x65, 0x76, 0x2f, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xa2, 0x02, 0x03, 0x50, 0x53, 0x58, 0xaa, 0x02,
	0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0xca, 0x02, 0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0xe2, 0x02, 0x1b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_service_service_proto_rawDescOnce sync.Once
	file_plugin_service_service_proto_rawDescData = file_plugin_service_service_proto_rawDesc
)

func file_plugin_service_service_proto_rawDescGZIP() []byte {
	file_plugin_service_service_proto_rawDescOnce.Do(func() {
		file_plugin_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_service_service_proto_rawDescData)
	})
	return file_plugin_service_service_proto_rawDescData
}

var file_plugin_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_plugin_service_service_proto_goTypes = []any{
	(*Empty)(nil),                   // 0: plugins.service.Empty
	(*GetNameResponse)(nil),         // 1: plugins.service.GetNameResponse
	(*GetKindResponse)(nil),         // 2: plugins.service.GetKindResponse
	(*GetSurveyResponse)(nil),       // 3: plugins.service.GetSurveyResponse
	(*ValidateAnswersRequest)(nil),  // 4: plugins.service.ValidateAnswersRequest
	(*ValidateAnswersResponse)(nil), // 5: plugins.service.ValidateAnswersResponse
	(*GetTemplateResponse)(nil),     // 6: plugins.service.GetTemplateResponse
	(*TemplateFile)(nil),            // 7: plugins.service.TemplateFile
	(*survey.Survey)(nil),           // 8: plugins.survey.Survey
	(*structpb.Struct)(nil),         // 9: google.protobuf.Struct
}
var file_plugin_service_service_proto_depIdxs = []int32{
	8,  // 0: plugins.service.GetSurveyResponse.survey:type_name -> plugins.survey.Survey
	9,  // 1: plugins.service.ValidateAnswersRequest.answers:type_name -> google.protobuf.Struct
	9,  // 2: plugins.service.ValidateAnswersResponse.values:type_name -> google.protobuf.Struct
	7,  // 3: plugins.service.GetTemplateResponse.template:type_name -> plugins.service.TemplateFile
	0,  // 4: plugins.service.Plugin.GetName:input_type -> plugins.service.Empty
	0,  // 5: plugins.service.Plugin.GetKind:input_type -> plugins.service.Empty
	0,  // 6: plugins.service.Plugin.GetSurvey:input_type -> plugins.service.Empty
	4,  // 7: plugins.service.Plugin.ValidateAnswers:input_type -> plugins.service.ValidateAnswersRequest
	0,  // 8: plugins.service.Plugin.GetTemplate:input_type -> plugins.service.Empty
	0,  // 9: plugins.service.Plugin.Stop:input_type -> plugins.service.Empty
	1,  // 10: plugins.service.Plugin.GetName:output_type -> plugins.service.GetNameResponse
	2,  // 11: plugins.service.Plugin.GetKind:output_type -> plugins.service.GetKindResponse
	3,  // 12: plugins.service.Plugin.GetSurvey:output_type -> plugins.service.GetSurveyResponse
	5,  // 13: plugins.service.Plugin.ValidateAnswers:output_type -> plugins.service.ValidateAnswersResponse
	6,  // 14: plugins.service.Plugin.GetTemplate:output_type -> plugins.service.GetTemplateResponse
	0,  // 15: plugins.service.Plugin.Stop:output_type -> plugins.service.Empty
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_plugin_service_service_proto_init() }
func file_plugin_service_service_proto_init() {
	if File_plugin_service_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_service_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_service_service_proto_goTypes,
		DependencyIndexes: file_plugin_service_service_proto_depIdxs,
		MessageInfos:      file_plugin_service_service_proto_msgTypes,
	}.Build()
	File_plugin_service_service_proto = out.File
	file_plugin_service_service_proto_rawDesc = nil
	file_plugin_service_service_proto_goTypes = nil
	file_plugin_service_service_proto_depIdxs = nil
}
